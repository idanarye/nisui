plugins {
   id 'java'
   id 'application'
   id 'org.jetbrains.kotlin.jvm' version '1.3.61'
}
mainClassName = 'nisui.app.NisuiApp'

allprojects {
    repositories {
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.jzy3d.org/releases' }
    }

    apply plugin: 'java'
    apply plugin: 'kotlin'
    dependencies {
        implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
        implementation 'org.slf4j:slf4j-api:1.7.21'
        testImplementation 'junit:junit:4.12'
        testImplementation 'org.assertj:assertj-core:3.8.0'
        /* testImplementation 'org.assertj:assertj-swing-junit:3.8.0' */
    }
    test {
        outputs.upToDateWhen { false }
        testLogging.showStandardStreams = true
    }

    compileJava {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
    compileTestJava {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

run {
   standardInput = System.in
   enableAssertions = true
   if (project.hasProperty('mainClass')) {
      main = mainClass
   }
   if (project.hasProperty('args')) {
      args(project.getProperty('args').split(' '))
   }
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Nisui',
                   /*'Implementation-Version': version,*/
                   'Main-Class': 'nisui.app.NisuiApp'
    }
    archiveBaseName = 'Nisui'
    destinationDirectory = file('build')
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

subprojects {
    dependencies {
        testImplementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.6.2'
        testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    }
}

project(":core") {
   dependencies {
      implementation 'com.github.petitparser.java-petitparser:petitparser-core:2.1.0'
   }
}

project(":java_runner") {
    dependencies {
        implementation project(':core')

        //implementation 'org.projectlombok:lombok:1.16.12'
        // Needed to use `javax.tools.JavaCompiler` with lombok:
        //implementation files("${System.properties['java.home']}/../lib/tools.jar")
    }
}

project(":h2_store") {
    dependencies {
       implementation group: 'com.h2database', name: 'h2', version: '1.4.196'
       implementation project(':core')

       // Use this to create test data
       /* testImplementation project(':java_runner') */
    }
}

project(":cli") {
    dependencies {
       implementation project(':core')
       implementation 'info.picocli:picocli:2.2.1'
       implementation project(':simple_reactor')

       testImplementation 'org.assertj:assertj-core:3.8.0'
       testImplementation 'org.assertj:assertj-swing-junit:3.8.0'

       testImplementation project(':java_runner')
       testImplementation project(':h2_store')

    }
}

project(":simple_reactor") {
   dependencies {
       implementation project(':core')
       testImplementation project(':java_runner')
       testImplementation project(':h2_store')
   }
}

project(":gui") {
   dependencies {
      implementation project(':core')
      implementation "org.jetbrains.kotlin:kotlin-reflect"

      testImplementation "org.assertj:assertj-swing-junit:3.8.0"
      testImplementation project(":h2_store")
      testImplementation project(":java_runner")

      implementation project(':jzy3d_plots')
   }
}


project(":jzy3d_plots") {
   dependencies {
      implementation project(":core")
      implementation "org.jetbrains.kotlin:kotlin-reflect"
      implementation group: "org.jzy3d", name: "jzy3d-api", version: "1.0.2"
   }
}

// App project's settings

dependencies {
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.6.2'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    implementation 'com.esotericsoftware.yamlbeans:yamlbeans:1.13'

    /*// Declare the dependency for your favourite test framework you want to use in your tests.*/
    /*// TestNG is also supported by the Gradle Test task. Just change the*/
    /*// testImplementation dependency to testImplementation 'org.testng:testng:6.8.1' and add*/
    /*// 'test.useTestNG()' to your build script.*/

    implementation project(':core')
    implementation project(':java_runner')
    implementation project(':cli')
    implementation project(':h2_store')
    implementation project(':gui')
}

test {
    testLogging.showStandardStreams = true
}

task javadoc_all(type: Javadoc) {
    source subprojects.collect { project ->
        project.sourceSets.main.allJava
    }
    destinationDir = new File(buildDir, 'javadoc')
}
